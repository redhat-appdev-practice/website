# This is a basic workflow to help you get started with Actions

name: Build And Stage

permissions:
  contents: read
  pages: write
  id-token: write

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the trunk branch
on:
  pull_request:
    types:
    - opened
    - reopened
    - synchronize

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Required to comment on the MR
    permissions:
      id-token: write
      contents: read
      issues: write
      pull-requests: write
      pages: write      # to deploy to Pages

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.2
        with:
          node-version: 'v20.11.0'

      # Our staging config is slightly different than our normal config
      - name: Setup Staging Config
        run: cp src/.vitepress/config-stage.mts src/.vitepress/config.mts

      - name: Build VitePress Static Content
        run: npm install; npm run docs:build

      # Push our site up so it can be used in GitHub Pages
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1.0.8
        with:
          # Upload entire repository
          path: 'dist'

      # Deploy our uploaded artifact to pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2.0.1

      - name: Create comment
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Staging environment is ready at ${{ steps.deployment.outputs.page_url }}'
            })
